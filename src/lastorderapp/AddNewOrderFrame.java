/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lastorderapp;
import java.awt.Color;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import static lastorderapp.LastOrderApp.*;
import lastorderapp.database.*;

/**
 *
 * @author doomsayer
 */
public class AddNewOrderFrame extends javax.swing.JFrame {

    /**
     * Creates new form AddNewOrderFrame
     */
    public AddNewOrderFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
        alertLabel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        LastOrderAppPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("LastOrderAppPU").createEntityManager();
        departmentsQuery = java.beans.Beans.isDesignTime() ? null : LastOrderAppPUEntityManager.createQuery("SELECT d FROM Departments d");
        departmentsList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : departmentsQuery.getResultList();
        roomsQuery = java.beans.Beans.isDesignTime() ? null : LastOrderAppPUEntityManager.createQuery("SELECT r FROM Rooms r");
        roomsList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : roomsQuery.getResultList();
        workersQuery = java.beans.Beans.isDesignTime() ? null : LastOrderAppPUEntityManager.createQuery("SELECT w FROM Workers w");
        workersList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : workersQuery.getResultList();
        workersQuery1 = java.beans.Beans.isDesignTime() ? null : LastOrderAppPUEntityManager.createQuery("SELECT w FROM Workers w");
        workersList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : workersQuery1.getResultList();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        departmentComboBox = new javax.swing.JComboBox<>();
        roomComboBox = new javax.swing.JComboBox<>();
        jobIssuedComboBox = new javax.swing.JComboBox<>();
        workTypeTextField = new javax.swing.JTextField();
        jobAcceptedComboBox = new javax.swing.JComboBox<>();
        startDateChooser = new com.toedter.calendar.JDateChooser();
        endDateChooser = new com.toedter.calendar.JDateChooser();
        addNewOrderButton = new javax.swing.JButton();
        alertLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWidths = new int[] {0, 10, 0, 10, 0, 10, 0, 10, 0};
        layout.rowHeights = new int[] {0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0};
        getContentPane().setLayout(layout);

        jLabel1.setText("Add new order");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 7;
        getContentPane().add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jSeparator1, gridBagConstraints);

        jLabel2.setText("Department");
        jLabel2.setMinimumSize(new java.awt.Dimension(140, 25));
        jLabel2.setName(""); // NOI18N
        jLabel2.setPreferredSize(new java.awt.Dimension(140, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        getContentPane().add(jLabel2, gridBagConstraints);

        jLabel3.setText("Work Type");
        jLabel3.setMinimumSize(new java.awt.Dimension(140, 25));
        jLabel3.setName(""); // NOI18N
        jLabel3.setPreferredSize(new java.awt.Dimension(140, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        getContentPane().add(jLabel3, gridBagConstraints);

        jLabel4.setText("Room");
        jLabel4.setMinimumSize(new java.awt.Dimension(140, 25));
        jLabel4.setName(""); // NOI18N
        jLabel4.setPreferredSize(new java.awt.Dimension(140, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        getContentPane().add(jLabel4, gridBagConstraints);

        jLabel5.setText("Job issued worker");
        jLabel5.setMinimumSize(new java.awt.Dimension(140, 25));
        jLabel5.setName(""); // NOI18N
        jLabel5.setPreferredSize(new java.awt.Dimension(140, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        getContentPane().add(jLabel5, gridBagConstraints);

        jLabel6.setText("Job accepted worker");
        jLabel6.setMinimumSize(new java.awt.Dimension(140, 25));
        jLabel6.setName(""); // NOI18N
        jLabel6.setPreferredSize(new java.awt.Dimension(140, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        getContentPane().add(jLabel6, gridBagConstraints);

        jLabel7.setText("Start date");
        jLabel7.setMinimumSize(new java.awt.Dimension(140, 25));
        jLabel7.setName(""); // NOI18N
        jLabel7.setPreferredSize(new java.awt.Dimension(140, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        getContentPane().add(jLabel7, gridBagConstraints);

        jLabel8.setText("End date");
        jLabel8.setMinimumSize(new java.awt.Dimension(140, 25));
        jLabel8.setName(""); // NOI18N
        jLabel8.setPreferredSize(new java.awt.Dimension(140, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        getContentPane().add(jLabel8, gridBagConstraints);

        departmentComboBox.setMinimumSize(new java.awt.Dimension(140, 25));
        departmentComboBox.setName(""); // NOI18N
        departmentComboBox.setPreferredSize(new java.awt.Dimension(140, 25));

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, departmentsList, departmentComboBox);
        bindingGroup.addBinding(jComboBoxBinding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        getContentPane().add(departmentComboBox, gridBagConstraints);

        roomComboBox.setMinimumSize(new java.awt.Dimension(140, 25));
        roomComboBox.setName(""); // NOI18N
        roomComboBox.setPreferredSize(new java.awt.Dimension(140, 25));

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, roomsList, roomComboBox);
        bindingGroup.addBinding(jComboBoxBinding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        getContentPane().add(roomComboBox, gridBagConstraints);

        jobIssuedComboBox.setMinimumSize(new java.awt.Dimension(140, 25));
        jobIssuedComboBox.setName(""); // NOI18N
        jobIssuedComboBox.setPreferredSize(new java.awt.Dimension(140, 25));

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, workersList, jobIssuedComboBox);
        bindingGroup.addBinding(jComboBoxBinding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        getContentPane().add(jobIssuedComboBox, gridBagConstraints);

        workTypeTextField.setMinimumSize(new java.awt.Dimension(140, 25));
        workTypeTextField.setName(""); // NOI18N
        workTypeTextField.setPreferredSize(new java.awt.Dimension(140, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        getContentPane().add(workTypeTextField, gridBagConstraints);

        jobAcceptedComboBox.setMinimumSize(new java.awt.Dimension(140, 25));
        jobAcceptedComboBox.setName(""); // NOI18N
        jobAcceptedComboBox.setPreferredSize(new java.awt.Dimension(140, 25));

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, workersList1, jobAcceptedComboBox);
        bindingGroup.addBinding(jComboBoxBinding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 12;
        getContentPane().add(jobAcceptedComboBox, gridBagConstraints);

        startDateChooser.setMinimumSize(new java.awt.Dimension(140, 25));
        startDateChooser.setName(""); // NOI18N
        startDateChooser.setPreferredSize(new java.awt.Dimension(140, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 14;
        getContentPane().add(startDateChooser, gridBagConstraints);

        endDateChooser.setMinimumSize(new java.awt.Dimension(140, 25));
        endDateChooser.setName(""); // NOI18N
        endDateChooser.setPreferredSize(new java.awt.Dimension(140, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 16;
        getContentPane().add(endDateChooser, gridBagConstraints);

        addNewOrderButton.setText("Add new order");
        addNewOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewOrderButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.gridwidth = 5;
        getContentPane().add(addNewOrderButton, gridBagConstraints);

        alertLabel.setText("jLabel9");
        alertLabel.setMinimumSize(new java.awt.Dimension(140, 25));
        alertLabel.setPreferredSize(new java.awt.Dimension(140, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.gridwidth = 5;
        getContentPane().add(alertLabel, gridBagConstraints);

        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 22;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        getContentPane().add(jButton1, gridBagConstraints);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addNewOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewOrderButtonActionPerformed
        // TODO add your handling code here:
        Departments orderDepartment = (Departments) departmentComboBox.getSelectedItem();
        int orderDepartmentID = orderDepartment.getDepartmentId().intValue();
        
        String workType = workTypeTextField.getText();
        
        Rooms orderRoom = (Rooms) roomComboBox.getSelectedItem();
        int orderRoomID = orderRoom.getRoomId().intValue();
        
        Workers orderIccJob = (Workers) jobIssuedComboBox.getSelectedItem();
        int orderIccJobID = orderIccJob.getWorkerId().intValue();
        
        Workers orderAccJob = (Workers) jobAcceptedComboBox.getSelectedItem();
        int orderAccJobID = orderAccJob.getWorkerId().intValue();
        
        Calendar startDate = startDateChooser.getCalendar();
        Calendar endDate = endDateChooser.getCalendar();
        
         if (startDate.compareTo(endDate) > 0){ 
            System.out.println("Date error");
            alertLabel.setText("Error. End date should be greater then Start date.");
            alertLabel.setForeground(Color.red);
            alertLabel.setVisible(true);
        }else{
         try {
            createOrder(orderDepartmentID, workType, orderIccJobID, orderAccJobID, orderRoomID, startDate, endDate);
            alertLabel.setText("Order '" + workType + "' added to database");
            alertLabel.setForeground(Color.green);
            alertLabel.setVisible(true);
        } catch (SQLException ex) {
            
            alertLabel.setText("error");
            alertLabel.setForeground(Color.red);
            alertLabel.setVisible(true);
        }
         }
        
        
        
        
        
    }//GEN-LAST:event_addNewOrderButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        OrderApplication OrderApplication = new OrderApplication();
        OrderApplication.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddNewOrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddNewOrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddNewOrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddNewOrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddNewOrderFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager LastOrderAppPUEntityManager;
    private javax.swing.JButton addNewOrderButton;
    private javax.swing.JLabel alertLabel;
    private javax.swing.JComboBox<String> departmentComboBox;
    private java.util.List<lastorderapp.database.Departments> departmentsList;
    private javax.persistence.Query departmentsQuery;
    private com.toedter.calendar.JDateChooser endDateChooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox<String> jobAcceptedComboBox;
    private javax.swing.JComboBox<String> jobIssuedComboBox;
    private javax.swing.JComboBox<String> roomComboBox;
    private java.util.List<lastorderapp.database.Rooms> roomsList;
    private javax.persistence.Query roomsQuery;
    private com.toedter.calendar.JDateChooser startDateChooser;
    private javax.swing.JTextField workTypeTextField;
    private java.util.List<lastorderapp.database.Workers> workersList;
    private java.util.List<lastorderapp.database.Workers> workersList1;
    private javax.persistence.Query workersQuery;
    private javax.persistence.Query workersQuery1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
